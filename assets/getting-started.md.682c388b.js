import{_ as s,o as a,c as p,U as e}from"./chunks/framework.76b79cb5.js";const F=JSON.parse('{"title":"入门","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md"}'),n={name:"getting-started.md"},l=e(`<h1 id="入门" tabindex="-1">入门 <a class="header-anchor" href="#入门" aria-label="Permalink to &quot;入门&quot;">​</a></h1><blockquote><p><a href="https://github.com/deployphp/deployer/blob/master/docs/getting-started.md" target="_blank" rel="noreferrer">getting-started.md</a><br> commit e0b59ec6685b3b9a8bccd1e9735d5798f48240e9</p></blockquote><p>本教程中将介绍如下内容：</p><ul><li>使用提供的 provision 设置新主机。</li><li>配置部署并执行第一次调度。</li></ul><p>首先, <a href="./installation.html">安装 Deployer</a>:</p><p>现在切换到项目并运行下列命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span></code></pre></div><p>Deployer 将询问几个问题，完成后将会有 <strong>deploy.php</strong> 或 <strong>deploy.yaml</strong> 文件。这是部署 recipe。包含主机，任务和需要的其它 recipe。Deployer 带有所有框架的 recipe 并且全部基于 <a href="./recipe/common.html">common</a> recipe。</p><h2 id="provision" tabindex="-1">Provision <a class="header-anchor" href="#provision" aria-label="Permalink to &quot;Provision&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">注意</p><p>如果有配置好的 Web 服务器，可以直接跳过<a href="#deploy">部署</a>步骤。</p></div><p>在 Linode、DigitalOcean、Vultr、AWS、GCP 等等上创建新的 VPS。</p><p>请确保使用的镜像是 <strong>Ubuntu 20.04 LTS</strong>，因为这个版本是借助 Deployer <a href="./recipe/provision.html">provision</a> recipe 提供支持。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在服务器上配置反向 DNS 或 RDNS。这将允许服务器使用域名而不是 IP 地址使用 SSH 登录。</p></div><p><strong>deploy.php</strong> recipe 包含使用一些重要参数定义的主机：</p><ul><li><code>remote_user</code> ssh 连接的用户名，</li><li><code>deploy_path</code> 将要调用的主机路径。</li></ul><p>将 <code>remote_user</code> 设置为 <code>deployer</code>。目前，新服务器可能只有 <code>root</code> 用户。provision recipe 将创建并配置 <code>deployer</code> 用户。</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">example.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remote_user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deployer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy_path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">~/example</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>连接到远程主机需要指定身份密钥或者私钥。需要直接添加身份密钥到主机定义中，但最好将其放到 <strong>~/.ssh/config</strong> 文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Host *</span></span>
<span class="line"><span style="color:#A6ACCD;">  IdentityFile ~/.ssh/id_rsa</span></span></code></pre></div><p>现在开始配置服务器。当主机没有用户 <code>deployer</code>，使用 <code>-o remote_user=root</code> 重写 provision 的 <code>remote_user</code>。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">provision</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote_user=root</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果服务器没有 <code>root</code> 用户，但您的远程用户可以使用 <code>sudo</code> 成为 <code>root</code>，则使用：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">provision</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">become=root</span></span></code></pre></div></div><p>在配置期间，Deployer 会询问几个问题：php 版本、数据库类型等等。接下来 Deployer 将会配置服务器并创建 <code>deployer</code> 用户。Provision 大约需要 <strong>5 分钟</strong>，将会安装好运行网站需要的一切。新网站将配置在 <a href="./recipe/common.html#deploy_path">deploy_path</a>。</p><p>配置完网络服务器后，开始部署项目。</p><h2 id="deploy" tabindex="-1">Deploy <a class="header-anchor" href="#deploy" aria-label="Permalink to &quot;Deploy&quot;">​</a></h2><p>部署项目：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span></span></code></pre></div><p>如果部署失败，Deployer 将打印错误消息以及哪个命令不成功。很可能需要在 <em>.env</em> 文件或类似文件中配置正确的数据库凭据。</p><p>Ssh 到主机，例如，用于编辑 <em>.env</em>：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">dep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ssh</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你的 web 服务器使用的 OpenSSH 版本低于 v7.6, 更新代码可能会失败并有错误消息 <code>unsupported option &quot;accept-new&quot;</code>。这时需要用如下重写 Git SSH 命令：</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">git_ssh_command</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ssh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div></div><p>正确配置所有内容后，可以从停止的位置恢复部署。然而，这不是必需的；可以从新的部署开始：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">dep deploy --start-from deploy:migrate</span></span></code></pre></div><p>第一次成功部署后，可以在服务器上找到以下目录结构：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">~/example                      // deploy_path。</span></span>
<span class="line"><span style="color:#A6ACCD;"> |- current -&gt; releases/1      // 当前版本的符号链接。</span></span>
<span class="line"><span style="color:#A6ACCD;"> |- releases                   // 所有版本的目录。</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- 1                       // 实际文件位置。</span></span>
<span class="line"><span style="color:#A6ACCD;">       |- ...</span></span>
<span class="line"><span style="color:#A6ACCD;">       |- .env -&gt; shared/.env  // 共享 .env 文件的符号链接。</span></span>
<span class="line"><span style="color:#A6ACCD;"> |- shared                     // 版本间共享文件的目录。</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .env                    // 示例：共享 .env 文件。</span></span>
<span class="line"><span style="color:#A6ACCD;"> |- .dep                       // Deployer 配置文件。</span></span></code></pre></div><p>配置网络服务器以服务 <code>current</code> 目录。例如，nginx：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">root /home/deployer/example/current/public;</span></span>
<span class="line"><span style="color:#A6ACCD;">index index.php;</span></span>
<span class="line"><span style="color:#A6ACCD;">location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">    try_files $uri $uri/ /index.php?$query_string;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>如果使用 provision recipe，Deployer 将自动配置 Caddy Web 服务器从 <a href="/recipe/provision/website.html#public_path">public_path</a> 提供服务。</p><p>现在在主机上添加构建步骤：</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">cd</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{{release_path}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">npm install</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">npm run prod</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">after</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy:update_code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>Deployer 有一个有效的任务就是用来检查当前部署的内容。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep releases</span></span>
<span class="line"><span style="color:#A6ACCD;">task releases</span></span>
<span class="line"><span style="color:#A6ACCD;">+---------------------+--------- deployer.org -------+--------+-----------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| Date (UTC)          | Release     | Author         | Target | Commit    |</span></span>
<span class="line"><span style="color:#A6ACCD;">+---------------------+-------------+----------------+--------+-----------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| 2021-11-05 14:00:22 | 1 (current) | Anton Medvedev | HEAD   | 943ded2be |</span></span>
<span class="line"><span style="color:#A6ACCD;">+---------------------+-------------+----------------+--------+-----------+</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>部署期间，<a href="./recipe/deploy/push.html">dep push</a> 任务也许有用。</p></div>`,43),o=[l];function t(c,r,i,y,d,D){return a(),p("div",null,o)}const h=s(n,[["render",t]]);export{F as __pageData,h as default};
