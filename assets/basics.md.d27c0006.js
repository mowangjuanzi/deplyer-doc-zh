import{_ as o,o as p,c as e,k as a,a as s,t,U as n}from"./chunks/framework.76b79cb5.js";const g=JSON.parse('{"title":"基础","description":"","frontmatter":{},"headers":[],"relativePath":"basics.md","filePath":"basics.md"}'),c={name:"basics.md"},r=n(`<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h1><p>Deployer 有两个主要的概念：<a href="./hosts.html"><strong>hosts</strong></a> 和 <a href="./tasks.html"><strong>tasks</strong></a>。</p><p><strong>recipe</strong> 是一个文件，包含定义的 <strong>hosts</strong> 和 <strong>tasks</strong>。</p><p>Deployer CLI 要运行需要两个参数：要运行的 <strong>task</strong> 和 <strong>selector</strong>。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep deploy deployer.org</span></span>
<span class="line"><span style="color:#A6ACCD;">  --- ------ ------------</span></span>
<span class="line"><span style="color:#A6ACCD;">   |    |         |</span></span>
<span class="line"><span style="color:#A6ACCD;">   |    |         \`--- Selector</span></span>
<span class="line"><span style="color:#A6ACCD;">   |    \`------------- Task</span></span>
<span class="line"><span style="color:#A6ACCD;">   \`------------------ CLI</span></span></code></pre></div><p>Deployer 使用 <a href="./selector.html">selector</a> 选择主机。接下来在所有已选主机上接受指定任务，执行一些准备（稍后接受），执行任务。</p><p>如果没有指定 selector，Deployer 将要求选择列表中的主机。如果 recipe 仅包含一个主机，Deployer 将自动选择它，使用特定 selector <code>all</code> 选择所有主机。</p><p><code>dep</code> CLI 在当前目录寻找 <code>deploy.php</code> 或 <code>deploy.yaml</code> 文件。</p><p>或者 recipe 可以通过 <code>-f</code> 或 <code>--file</code> 选项明确指定。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep --file=deploy.php deploy deployer.org</span></span></code></pre></div><p>编写 recipe。</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// We are going to use functions declared primarily in Deployer namespace,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// to simplify recipe we will use Deployer namespace too. Alternativly,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// you can import individual functions via &quot;use function&quot;.</span></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Deployer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deployer.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_task</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">whoami</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>Let&#39;s try to run our task on deployer.org.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">$</span></span></code></pre></div><p>But where is our <code>whoami</code> command output? By default, Deployer runs with normal verbosity level and shows only names of executed tasks. Let&#39;s increase verbosity to verbose, and rerun our task.</p><p>Add <code>-v</code> option to increase verbosity. Read more about <a href="./cli.html">CLI usage</a>.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task -v</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run whoami</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] deployer</span></span>
<span class="line"><span style="color:#A6ACCD;">$</span></span></code></pre></div><p>Now let&#39;s add second host:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deployer.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">medv.io</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>How does Deployer know how to connect to a host? It uses same <code>~/.ssh/config</code> file as the <code>ssh</code> command. Alternatively, you can specify <a href="./hosts.html">connection options</a> in recipe.</p><p>Let&#39;s run <code>my_task</code> task on both hosts:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task -v all</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run whoami</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] run whoami</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] anton</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] deployer</span></span></code></pre></div><p>Deployer runs a task in parallel on each host. This is why the output is mixed. We can limit it to run only on one host at a time.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task -v all --limit 1</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run whoami</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] deployer</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] run whoami</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] deployer</span></span></code></pre></div><p>Limit level also possible to <a href="./tasks.html#limit">specified per task</a>.</p><p>Each host has a configuration: a list of key-value pairs. Let&#39;s define our first configuration option for both our hosts:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deployer.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">medv.io</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>In the task we can get current executing host with <a href="./api.html#currenthost">currentHost</a> function:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_task</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">myConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">currentHost</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">writeln</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_config: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">myConfig</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>Or with <a href="./api.html#get">get</a> function:</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">task(&#39;my_task&#39;, function () {</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   $myConfig = currentHost()-&gt;get(&#39;my_config&#39;);</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   $myConfig = get(&#39;my_config&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    writeln(&quot;my_config: &quot; . $myConfig);</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span></code></pre></div><p>Or via <a href="./api.html#parse">parse</a> function which replaces brackets <code>{{ ... }}</code> and value with of config option.</p><p>All functions (writeln, run, runLocally, cd, upload, etc) call <strong>parse</strong> function internally. So you don&#39;t need to call <strong>parse</strong> function by your self.</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">task(&#39;my_task&#39;, function () {</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   $myConfig = get(&#39;my_config&#39;);</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">   writeln(&quot;my_config: &quot; . $myConfig);</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">   writeln(&quot;my_config: {{my_config}}&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">});</span></span></code></pre></div><p>Let&#39;s try to run our task:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task all</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] my_config: foo</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] my_config: bar</span></span></code></pre></div><p>Awesome! Each host configuration inherits global configuration. Let&#39;s refactor our recipe to define one global config option:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">global</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deployer.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">host</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">medv.io</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>The config option <code>my_config</code> will be equal to <code>global</code> on both hosts.</p><p>Also, config option value can be specified as a callback, such callback executed on first access and returned result saved in host configuration.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">whoami</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">whoami</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_task</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">writeln</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Who am I? {{whoami}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>Let&#39;s try to run it:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task all</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] Who am I? deployer</span></span>
<span class="line"><span style="color:#A6ACCD;">[medv.io] Who am I? anton</span></span></code></pre></div><p>We can use this to create dynamic configuration which uses current host information.</p><p>Only the first call will trigger the callback execution. All subsequent checks use saved value.</p><p>Here is an example:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">current_date</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_task</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">writeln</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">What time is it? {{current_date}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sleep 5</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">writeln</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">What time is it? {{current_date}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div>`,47),i=a("code",null,"date",-1),y=n(`<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task deployer.org -v</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run date</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] Wed 03 Nov 2021 01:16:53 PM UTC</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] What time is it? Wed 03 Nov 2021 01:16:53 PM UTC</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run sleep 5</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] What time is it? Wed 03 Nov 2021 01:16:53 PM UTC</span></span></code></pre></div><p>We can override a config option via CLI option <code>-o</code> like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ dep my_task deployer.org -v -o current_date=&quot;I don&#39;t know&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">task my_task</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] What time is it? I don&#39;t know</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] run sleep 5</span></span>
<span class="line"><span style="color:#A6ACCD;">[deployer.org] What time is it? I don&#39;t know</span></span></code></pre></div><p>Since the <code>current_date</code> config option is overridden there is no need to call the callback. So there is no &#39;run date&#39;.</p>`,4);function D(l,F,C,d,A,h){return p(),e("div",null,[r,a("p",null,[s("If we run my_task we will see that "),i,s(" is called only once on "),a("code",null,t(l.current_date),1),s(" access.")]),y])}const m=o(c,[["render",D]]);export{g as __pageData,m as default};
